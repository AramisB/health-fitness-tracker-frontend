{"ast":null,"code":"const login = async (email, password) => {\n  try {\n    const response = await fetch('http://localhost:5000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      const userWithToken = {\n        ...data.user,\n        token: data.token\n      }; // Combine user data and token\n      setUser(userWithToken); // Set the combined user object\n      localStorage.setItem('token', data.token); // Save the JWT in local storage\n    } else {\n      throw new Error(data.msg); // Handle error from server\n    }\n  } catch (error) {\n    console.error('Login failed:', error); // Log error\n  }\n};","map":{"version":3,"names":["login","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","userWithToken","user","token","setUser","localStorage","setItem","Error","msg","error","console"],"sources":["/health_fitness_tracker/fitness-tracker-frontend/src/context/AuthContext.js"],"sourcesContent":["const login = async (email, password) => {\n  try {\n    const response = await fetch('http://localhost:5000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    const data = await response.json();\n    if (response.ok) {\n      const userWithToken = { ...data.user, token: data.token }; // Combine user data and token\n      setUser(userWithToken); // Set the combined user object\n      localStorage.setItem('token', data.token); // Save the JWT in local storage\n    } else {\n      throw new Error(data.msg); // Handle error from server\n    }\n  } catch (error) {\n    console.error('Login failed:', error); // Log error\n  }\n};\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACf,MAAMC,aAAa,GAAG;QAAE,GAAGH,IAAI,CAACI,IAAI;QAAEC,KAAK,EAAEL,IAAI,CAACK;MAAM,CAAC,CAAC,CAAC;MAC3DC,OAAO,CAACH,aAAa,CAAC,CAAC,CAAC;MACxBI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL,MAAM,IAAII,KAAK,CAACT,IAAI,CAACU,GAAG,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC,CAAC;EACzC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}