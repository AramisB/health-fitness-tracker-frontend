{"ast":null,"code":"var _jsxFileName = \"/health_fitness_tracker/fitness-tracker-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('https://health-fitness-tracker-i3l4.vercel.app/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const userWithToken = {\n          ...data.user,\n          token: data.token\n        }; // Combine user data and token\n        setUser(userWithToken); // Set the combined user object\n        localStorage.setItem('token', data.token); // Save the JWT in local storage\n      } else {\n        throw new Error(data.msg); // Handle error from server\n      }\n    } catch (error) {\n      console.error('Login failed:', error); // Log error\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await fetch('https://health-fitness-tracker-9l7o.vercel.app/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user); // Set the user from response data\n        localStorage.setItem('token', data.token); // Save the JWT in local storage\n      } else {\n        throw new Error(data.msg); // Handle error from server\n      }\n    } catch (error) {\n      console.error('Registration failed:', error); // Log error\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token'); // Remove token on logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use AuthContext\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","userWithToken","token","localStorage","setItem","Error","msg","error","console","register","name","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/health_fitness_tracker/fitness-tracker-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('https://health-fitness-tracker-i3l4.vercel.app/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n  \n      const data = await response.json();\n      if (response.ok) {\n        const userWithToken = { ...data.user, token: data.token }; // Combine user data and token\n        setUser(userWithToken); // Set the combined user object\n        localStorage.setItem('token', data.token); // Save the JWT in local storage\n      } else {\n        throw new Error(data.msg); // Handle error from server\n      }\n    } catch (error) {\n      console.error('Login failed:', error); // Log error\n    }\n  };\n\n  const register = async (name, email, password) => {\n    try {\n      const response = await fetch('https://health-fitness-tracker-9l7o.vercel.app/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user); // Set the user from response data\n        localStorage.setItem('token', data.token); // Save the JWT in local storage\n      } else {\n        throw new Error(data.msg); // Handle error from server\n      }\n    } catch (error) {\n      console.error('Registration failed:', error); // Log error\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token'); // Remove token on logout\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use AuthContext\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}