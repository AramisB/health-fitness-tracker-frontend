{"ast":null,"code":"var _jsxFileName = \"/health_fitness_tracker/fitness-tracker-frontend/src/components/Goals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Goals.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Goals() {\n  _s();\n  const [goal, setGoal] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [goalsList, setGoalsList] = useState([]);\n  const [successMsg, setSuccessMsg] = useState('');\n  const {\n    user\n  } = useAuth();\n  const handleSetGoal = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('https://health-fitness-tracker-i3l4.vercel.app/api/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          goal,\n          deadline\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setGoalsList(prevGoals => [...prevGoals, data.goal]); // Update the goals list\n        setGoal(''); // Clear input fields\n        setDeadline('');\n        setSuccessMsg('Goal added successfully!');\n        setTimeout(() => setSuccessMsg(''), 3000);\n      } else {\n        console.error('Error submitting goal:', data.msg);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // Fetch existing goals when the component mounts\n  useEffect(() => {\n    const fetchGoals = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:5000/api/goals', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setGoalsList(data.goals); // Assuming the API returns a list of goals\n        } else {\n          console.error('Error fetching goals:', data.msg);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchGoals();\n  }, [user]); // Refetch goals if user changes\n\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goals-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set Fitness Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSetGoal,\n      className: \"goals-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: goal,\n          onChange: e => setGoal(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Deadline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: deadline,\n          onChange: e => setDeadline(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Set Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), successMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-msg\",\n        children: successMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"goals-list\",\n      children: goalsList.map((g, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"goal-item\",\n        children: [g.goal, \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"deadline\",\n          children: formatDate(g.deadline)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 24\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Goals, \"L5wSCcLJeFt4qSK4T27MbBt8Vvc=\", false, function () {\n  return [useAuth];\n});\n_c = Goals;\nexport default Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsxDEV","_jsxDEV","Goals","_s","goal","setGoal","deadline","setDeadline","goalsList","setGoalsList","successMsg","setSuccessMsg","user","handleSetGoal","e","preventDefault","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","data","json","ok","prevGoals","setTimeout","console","error","msg","fetchGoals","goals","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","map","g","index","_c","$RefreshReg$"],"sources":["/health_fitness_tracker/fitness-tracker-frontend/src/components/Goals.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Goals.css';\n\nfunction Goals() {\n  const [goal, setGoal] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [goalsList, setGoalsList] = useState([]);\n  const [successMsg, setSuccessMsg] = useState('');\n  const { user } = useAuth();\n\n  const handleSetGoal = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('https://health-fitness-tracker-i3l4.vercel.app/api/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ goal, deadline }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setGoalsList((prevGoals) => [...prevGoals, data.goal]); // Update the goals list\n        setGoal(''); // Clear input fields\n        setDeadline('');\n        setSuccessMsg('Goal added successfully!');\n        setTimeout(() => setSuccessMsg(''), 3000);\n      } else {\n        console.error('Error submitting goal:', data.msg);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // Fetch existing goals when the component mounts\n  useEffect(() => {\n    const fetchGoals = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:5000/api/goals', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          setGoalsList(data.goals); // Assuming the API returns a list of goals\n        } else {\n          console.error('Error fetching goals:', data.msg);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchGoals();\n  }, [user]); // Refetch goals if user changes\n\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  return (\n    <div className=\"goals-container\">\n      <h2>Set Fitness Goals</h2>\n      <form onSubmit={handleSetGoal} className=\"goals-form\">\n        <div className=\"form-group\">\n          <label>Goal:</label>\n          <input \n            type=\"text\" \n            value={goal} \n            onChange={(e) => setGoal(e.target.value)} \n            required \n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Deadline:</label>\n          <input \n            type=\"date\" \n            value={deadline} \n            onChange={(e) => setDeadline(e.target.value)} \n            required \n          />\n        </div>\n        <button type=\"submit\" className=\"submit-btn\">Set Goal</button>\n        {successMsg && <p className=\"success-msg\">{successMsg}</p>}\n      </form>\n\n      <h3>Your Goals</h3>\n      <ul className=\"goals-list\">\n        {goalsList.map((g, index) => (\n          <li key={index} className=\"goal-item\">\n            {g.goal} - <span className=\"deadline\">{formatDate(g.deadline)}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Goals;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEe;EAAK,CAAC,GAAGb,OAAO,CAAC,CAAC;EAE1B,MAAMc,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAA0D,EAAE;QACvFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUP,KAAK;QAChC,CAAC;QACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEtB,IAAI;UAAEE;QAAS,CAAC;MACzC,CAAC,CAAC;MAEF,MAAMqB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACfpB,YAAY,CAAEqB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEH,IAAI,CAACvB,IAAI,CAAC,CAAC,CAAC,CAAC;QACxDC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACbE,WAAW,CAAC,EAAE,CAAC;QACfI,aAAa,CAAC,0BAA0B,CAAC;QACzCoB,UAAU,CAAC,MAAMpB,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC3C,CAAC,MAAM;QACLqB,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEN,IAAI,CAACO,GAAG,CAAC;MACnD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;;EAED;EACAnC,SAAS,CAAC,MAAM;IACd,MAAMqC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMnB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAC9DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;UACfpB,YAAY,CAACkB,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC;QAC5B,CAAC,MAAM;UACLJ,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEN,IAAI,CAACO,GAAG,CAAC;QAClD;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAEDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACvB,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,MAAMyB,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAU,CAAC;IAClE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;EACpE,CAAC;EAED,oBACEtC,OAAA;IAAK6C,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B9C,OAAA;MAAA8C,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlD,OAAA;MAAMmD,QAAQ,EAAEvC,aAAc;MAACiC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACnD9C,OAAA;QAAK6C,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB9C,OAAA;UAAA8C,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBlD,OAAA;UACEoD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAElD,IAAK;UACZmD,QAAQ,EAAGzC,CAAC,IAAKT,OAAO,CAACS,CAAC,CAAC0C,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlD,OAAA;QAAK6C,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB9C,OAAA;UAAA8C,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBlD,OAAA;UACEoD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEhD,QAAS;UAChBiD,QAAQ,EAAGzC,CAAC,IAAKP,WAAW,CAACO,CAAC,CAAC0C,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlD,OAAA;QAAQoD,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC7DzC,UAAU,iBAAIT,OAAA;QAAG6C,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAErC;MAAU;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eAEPlD,OAAA;MAAA8C,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlD,OAAA;MAAI6C,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBvC,SAAS,CAACkD,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACtB3D,OAAA;QAAgB6C,SAAS,EAAC,WAAW;QAAAC,QAAA,GAClCY,CAAC,CAACvD,IAAI,EAAC,KAAG,eAAAH,OAAA;UAAM6C,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEV,UAAU,CAACsB,CAAC,CAACrD,QAAQ;QAAC;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAD9DS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChD,EAAA,CAtGQD,KAAK;EAAA,QAKKH,OAAO;AAAA;AAAA8D,EAAA,GALjB3D,KAAK;AAwGd,eAAeA,KAAK;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}