{"ast":null,"code":"var _jsxFileName = \"/health_fitness_tracker/fitness-tracker-frontend/src/components/ProgressChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ProgressChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (chartInstance.current) {\n      chartInstance.current.destroy(); // Destroy previous chart instance before re-creating\n    }\n\n    // Create a new chart instance\n    chartInstance.current = new ChartJS(chartRef.current, {\n      type: 'line',\n      data: {\n        labels: data.labels,\n        datasets: [{\n          label: 'Calories Burned',\n          data: data.datasets[0].data,\n          fill: true,\n          // Enable filling under the line\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          // Light background color\n          borderColor: 'rgba(75, 192, 192, 1)',\n          // Line color\n          pointBackgroundColor: 'rgba(75, 192, 192, 1)',\n          // Point color\n          pointBorderColor: '#fff',\n          // Point border color\n          pointHoverBackgroundColor: '#fff',\n          // Point hover background color\n          pointHoverBorderColor: 'rgba(75, 192, 192, 1)',\n          // Point hover border color\n          tension: 0.1 // Smooth the line\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        // Allows you to control the height independently\n        scales: {\n          x: {\n            type: 'category',\n            // Set your x-axis as category scale\n            title: {\n              display: true,\n              text: 'Date',\n              font: {\n                size: 14 // Font size for x-axis title\n              }\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Calories Burned',\n              font: {\n                size: 14 // Font size for y-axis title\n              }\n            },\n            min: 0\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                size: 12 // Font size for legend\n              }\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: function (tooltipItem) {\n                return `Calories: ${tooltipItem.parsed.y}`; // Custom tooltip format\n              }\n            }\n          }\n        }\n      }\n    });\n    return () => {\n      chartInstance.current.destroy(); // Cleanup on component unmount\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef,\n    style: {\n      height: '300px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this); // Set height for the chart\n};\n_s(ProgressChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = ProgressChart;\nexport default ProgressChart;\nvar _c;\n$RefreshReg$(_c, \"ProgressChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ProgressChart","data","_s","chartRef","chartInstance","current","destroy","type","labels","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","tension","options","responsive","maintainAspectRatio","scales","x","title","display","text","font","size","y","min","plugins","legend","tooltip","callbacks","tooltipItem","parsed","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/health_fitness_tracker/fitness-tracker-frontend/src/components/ProgressChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst ProgressChart = ({ data }) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    if (chartInstance.current) {\n      chartInstance.current.destroy(); // Destroy previous chart instance before re-creating\n    }\n\n    // Create a new chart instance\n    chartInstance.current = new ChartJS(chartRef.current, {\n      type: 'line',\n      data: {\n        labels: data.labels,\n        datasets: [\n          {\n            label: 'Calories Burned',\n            data: data.datasets[0].data,\n            fill: true, // Enable filling under the line\n            backgroundColor: 'rgba(75, 192, 192, 0.2)', // Light background color\n            borderColor: 'rgba(75, 192, 192, 1)', // Line color\n            pointBackgroundColor: 'rgba(75, 192, 192, 1)', // Point color\n            pointBorderColor: '#fff', // Point border color\n            pointHoverBackgroundColor: '#fff', // Point hover background color\n            pointHoverBorderColor: 'rgba(75, 192, 192, 1)', // Point hover border color\n            tension: 0.1, // Smooth the line\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false, // Allows you to control the height independently\n        scales: {\n          x: {\n            type: 'category', // Set your x-axis as category scale\n            title: {\n              display: true,\n              text: 'Date',\n              font: {\n                size: 14, // Font size for x-axis title\n              },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Calories Burned',\n              font: {\n                size: 14, // Font size for y-axis title\n              },\n            },\n            min: 0,\n          },\n        },\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                size: 12, // Font size for legend\n              },\n            },\n          },\n          tooltip: {\n            callbacks: {\n              label: function (tooltipItem) {\n                return `Calories: ${tooltipItem.parsed.y}`; // Custom tooltip format\n              },\n            },\n          },\n        },\n      },\n    });\n\n    return () => {\n      chartInstance.current.destroy(); // Cleanup on component unmount\n    };\n  }, [data]);\n\n  return <canvas ref={chartRef} style={{ height: '300px', width: '100%' }}></canvas>; // Set height for the chart\n};\n\nexport default ProgressChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}