{"ast":null,"code":"var _jsxFileName = \"/health_fitness_tracker/fitness-tracker-frontend/src/components/Progress.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProgressChart from './ProgressChart';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Progress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Progress() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [progressData, setProgressData] = useState([]);\n\n  // Fetch progress data from the backend\n  useEffect(() => {\n    const fetchProgress = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:5000/api/progress', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setProgressData(data.progress);\n        } else {\n          console.error('Error fetching progress:', data.msg);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchProgress();\n  }, [user]);\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: progressData.map(entry => new Date(entry.date).toLocaleDateString()),\n    datasets: [{\n      label: 'Calories Burned',\n      data: progressData.map(entry => entry.caloriesBurned),\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n\n  // Render the ProgressChart component with the chart data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), progressData.length > 0 ? /*#__PURE__*/_jsxDEV(ProgressChart, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) // Use the ProgressChart component\n    : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No progress data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Progress, \"g7bp80ZAQI+6V0GfdpmrZCOFz50=\", false, function () {\n  return [useAuth];\n});\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useState","useEffect","ProgressChart","useAuth","jsxDEV","_jsxDEV","Progress","_s","user","progressData","setProgressData","fetchProgress","token","localStorage","getItem","response","fetch","method","headers","Authorization","data","json","ok","progress","console","error","msg","chartData","labels","map","entry","Date","date","toLocaleDateString","datasets","label","caloriesBurned","fill","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/health_fitness_tracker/fitness-tracker-frontend/src/components/Progress.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProgressChart from './ProgressChart';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Progress.css';\n\nfunction Progress() {\n  const { user } = useAuth();\n  const [progressData, setProgressData] = useState([]);\n\n  // Fetch progress data from the backend\n  useEffect(() => {\n    const fetchProgress = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:5000/api/progress', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          setProgressData(data.progress);\n        } else {\n          console.error('Error fetching progress:', data.msg);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchProgress();\n  }, [user]);\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: progressData.map((entry) => new Date(entry.date).toLocaleDateString()),\n    datasets: [\n      {\n        label: 'Calories Burned',\n        data: progressData.map((entry) => entry.caloriesBurned),\n        fill: false,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(75,192,192,1)',\n      },\n    ],\n  };\n\n  // Render the ProgressChart component with the chart data\n  return (\n    <div>\n      <h2>Your Progress</h2>\n      {progressData.length > 0 ? (\n        <ProgressChart data={chartData} /> // Use the ProgressChart component\n      ) : (\n        <p>No progress data available</p>\n      )}\n    </div>\n  );\n}\n\nexport default Progress;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,MAAMQ,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,IAAIN,QAAQ,CAACO,EAAE,EAAE;UACfZ,eAAe,CAACU,IAAI,CAACG,QAAQ,CAAC;QAChC,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEL,IAAI,CAACM,GAAG,CAAC;QACrD;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAEDd,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMmB,SAAS,GAAG;IAChBC,MAAM,EAAEnB,YAAY,CAACoB,GAAG,CAAEC,KAAK,IAAK,IAAIC,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAC9EC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,iBAAiB;MACxBf,IAAI,EAAEX,YAAY,CAACoB,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACM,cAAc,CAAC;MACvDC,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,oBAAoB;MACrCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;;EAED;EACA,oBACElC,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBnC,YAAY,CAACoC,MAAM,GAAG,CAAC,gBACtBxC,OAAA,CAACH,aAAa;MAACkB,IAAI,EAAEO;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,eAEnCvC,OAAA;MAAAmC,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrC,EAAA,CAvDQD,QAAQ;EAAA,QACEH,OAAO;AAAA;AAAA2C,EAAA,GADjBxC,QAAQ;AAyDjB,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}